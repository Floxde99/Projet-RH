{% extends "../layouts/base.twig" %}

{% block style %}
<!-- Ajout des styles MapLibre -->
<link href="https://unpkg.com/maplibre-gl@3.6.2/dist/maplibre-gl.css" rel="stylesheet" />
<style>
  #map {
    width: 100%;
    height: 400px;
    border-radius: 0.5rem;
    margin-top: 1rem;
  }
  .marker {
    background-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="%230ea5e9" stroke="%23ffffff" stroke-width="2"><rect x="4" y="5" width="16" height="14" rx="2"/><line x1="9" y1="2" x2="15" y2="2"/><line x1="12" y1="14" x2="12" y2="14"/><line x1="12" y1="18" x2="12" y2="18"/></svg>');
    background-size: cover;
    width: 30px;
    height: 30px;
    cursor: pointer;
  }
</style>
{% endblock %}

{% block main %}
<div class="min-h-screen flex flex-col">
  <!-- Tabs -->
  <div class="tabs tabs-boxed mb-6">
    <button class="tab tab-active" onclick="switchTab('employees')">Employés</button>
    <button class="tab" onclick="switchTab('computers')">Ordinateurs</button>
  </div>

  <!-- Employees Section -->
  <div id="employees-tab" class="flex-1">
    <div class="flex justify-between items-center mb-4">
      <h2 class="text-2xl font-bold">Liste des employés</h2>
      <label for="add-employee-modal" class="btn btn-primary">Ajouter un employé</label>
    </div>
    
    <div class="overflow-x-auto">
      <table class="table table-zebra w-full">
        <thead>
          <tr>
            <th>Nom</th>
            <th>Prénom</th>
            <th>Email</th>
            <th>Âge</th>
            <th>Genre</th>
            <th>Ordinateur</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {% if employes %}
            {% for employe in employes %}
            <tr>
              <td>{{ employe.lastname }}</td>
              <td>{{ employe.firstName }}</td>
              <td>{{ employe.mail }}</td>
              <td>{{ employe.birthDate ? ((("now"|date("Y")) - (employe.birthDate|date("Y"))) ~ " ans") : "-" }}</td>
              <td>{{ employe.gender ? employe.gender : "-" }}</td>
              <td>{{ employe.computer ? employe.computer.macAddress : "Non assigné" }}</td>
              <td class="flex gap-2">
                <label for="edit-employee-modal-{{ employe.id }}" class="btn btn-sm btn-outline">Modifier</label>
                <button class="btn btn-sm btn-error" onclick="confirmDelete('employee', {{ employe.id }})">Supprimer</button>
              </td>
            </tr>
            {% endfor %}
          {% else %}
            <tr><td colspan="7" class="text-center py-4">Aucun employé trouvé</td></tr>
          {% endif %}
        </tbody>
      </table>
    </div>
  </div>

  <!-- Computers Section -->
  <div id="computers-tab" class="hidden flex-1">
    <div class="flex justify-between items-center mb-4">
      <h2 class="text-2xl font-bold">Liste des ordinateurs</h2>
      <label for="add-computer-modal" class="btn btn-primary">Ajouter un ordinateur</label>
    </div>
    
    <div class="overflow-x-auto">
      <table class="table table-zebra w-full">
        <thead>
          <tr>
            <th>Adresse MAC</th>
            <th>Employé assigné</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {% if computers %}
            {% for computer in computers %}
            <tr>
              <td>{{ computer.macAddress }}</td>
              <td>
                {% if computer.employe %}
                  {{ computer.employe.firstName }} {{ computer.employe.lastname }}
                {% else %}
                  <label for="assign-computer-modal-{{ computer.id }}" class="btn btn-xs btn-outline">Assigner</label>
                {% endif %}
              </td>
              <td class="flex gap-2">
                <label for="edit-computer-modal-{{ computer.id }}" class="btn btn-sm btn-outline">Modifier</label>
                <button class="btn btn-sm btn-error" onclick="confirmDelete('computer', {{ computer.id }})">Supprimer</button>
                {% if computer.employe %}
                  <button class="btn btn-sm btn-warning" onclick="unassignComputer({{ computer.id }})">Désassigner</button>
                {% endif %}
              </td>
            </tr>
            {% endfor %}
          {% else %}
            <tr><td colspan="3" class="text-center py-4">Aucun ordinateur trouvé</td></tr>
          {% endif %}
        </tbody>
      </table>
    </div>
    
    <!-- Ajout de la carte MapLibre -->
    <div class="mt-8 bg-base-200 p-4 rounded-box">
      <h3 class="text-xl font-bold mb-2">Localisation des ordinateurs</h3>
      <div id="map" class="shadow-lg"></div>
    </div>
  </div>
</div>

<!-- Add Employee Modal -->
<input type="checkbox" id="add-employee-modal" class="modal-toggle" />
<div class="modal">
  <div class="modal-box">
    <h3 class="font-bold text-lg">Ajouter un employé</h3>
    <form action="/employe/create" method="POST" class="py-4">
      <div class="form-control">
        <label for="add-lastname" class="label">Nom</label>
        <input type="text" name="lastname" id="add-lastname" class="input input-bordered" required />
      </div>
      <div class="form-control">
        <label for="add-firstName" class="label">Prénom</label>
        <input type="text" name="firstName" id="add-firstName" class="input input-bordered" required />
      </div>
      <div class="form-control">
        <label for="add-mail" class="label">Email</label>
        <input type="email" name="mail" id="add-mail" class="input input-bordered" required />
      </div>
      <div class="form-control">
        <label for="add-password" class="label">Mot de passe</label>
        <input type="password" name="password" id="add-password" class="input input-bordered" required />
      </div>
      <div class="form-control">
        <label for="add-birthDate" class="label">Date de naissance</label>
        <input type="date" name="birthDate" id="add-birthDate" class="input input-bordered" />
      </div>
      <div class="form-control">
        <label for="add-gender" class="label">Genre</label>
        <select name="gender" id="add-gender" class="select select-bordered">
          <option value="">Sélectionner</option>
          <option value="M">Homme</option>
          <option value="F">Femme</option>
          <option value="O">Autre</option>
        </select>
      </div>
      <input type="hidden" name="businessOwnerId" value="{{ user.id }}" />
      <div class="modal-action">
        <button type="submit" class="btn btn-primary">Enregistrer</button>
        <label for="add-employee-modal" class="btn">Annuler</label>
      </div>
    </form>
  </div>
</div>

<!-- Add Computer Modal -->
<input type="checkbox" id="add-computer-modal" class="modal-toggle" />
<div class="modal">
  <div class="modal-box">
    <h3 class="font-bold text-lg">Ajouter un ordinateur</h3>
    <form action="/computer/create" method="POST" class="py-4">
      <div class="form-control">
        <label for="add-macAddress" class="label">Adresse MAC</label>
        <input type="text" name="macAddress" id="add-macAddress" class="input input-bordered" required pattern="^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$" title="Format valide: AA:BB:CC:DD:EE:FF" />
      </div>
      <div class="modal-action">
        <button type="submit" class="btn btn-primary">Enregistrer</button>
        <label for="add-computer-modal" class="btn">Annuler</label>
      </div>
    </form>
  </div>
</div>

<!-- Edit Computer Modals -->
{% if computers %}
  {% for computer in computers %}
  <input type="checkbox" id="edit-computer-modal-{{ computer.id }}" class="modal-toggle" />
  <div class="modal">
    <div class="modal-box">
      <h3 class="font-bold text-lg">Modifier l'ordinateur</h3>
      <form action="/computer/update/{{ computer.id }}" method="POST" class="py-4">
        <div class="form-control">
          <label for="edit-macAddress-{{ computer.id }}" class="label">Adresse MAC</label>
          <input type="text" name="macAddress" id="edit-macAddress-{{ computer.id }}" class="input input-bordered" required value="{{ computer.macAddress }}" pattern="^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$" title="Format valide: AA:BB:CC:DD:EE:FF" />
        </div>
        <div class="modal-action">
          <button type="submit" class="btn btn-primary">Mettre à jour</button>
          <label for="edit-computer-modal-{{ computer.id }}" class="btn">Annuler</label>
        </div>
      </form>
    </div>
  </div>
  {% endfor %}
{% endif %}

<!-- Assign Computer Modals -->
{% if computers %}
  {% for computer in computers %}
  {% if not computer.employe %}
  <input type="checkbox" id="assign-computer-modal-{{ computer.id }}" class="modal-toggle" />
  <div class="modal">
    <div class="modal-box">
      <h3 class="font-bold text-lg">Assigner un employé</h3>
      <form action="/computer/assign/{{ computer.id }}" method="POST" class="py-4">
        <div class="form-control">
          <label for="assign-employeId-{{ computer.id }}" class="label">Sélectionner un employé</label>
          <select name="employeId" id="assign-employeId-{{ computer.id }}" class="select select-bordered" required>
            <option value="">Sélectionner un employé</option>
            {% for employe in employes %}
              {% if not employe.computer %}
                <option value="{{ employe.id }}">{{ employe.firstName }} {{ employe.lastname }}</option>
              {% endif %}
            {% endfor %}
          </select>
        </div>
        <div class="modal-action">
          <button type="submit" class="btn btn-primary">Assigner</button>
          <label for="assign-computer-modal-{{ computer.id }}" class="btn">Annuler</label>
        </div>
      </form>
    </div>
  </div>
  {% endif %}
  {% endfor %}
{% endif %}

<!-- Edit Employee Modals -->
{% if employes %}
  {% for employe in employes %}
  <input type="checkbox" id="edit-employee-modal-{{ employe.id }}" class="modal-toggle" />
  <div class="modal">
    <div class="modal-box">
      <h3 class="font-bold text-lg">Modifier l'employé</h3>
      <form action="/employe/update/{{ employe.id }}" method="POST" class="py-4">
        <div class="form-control">
          <label for="edit-lastname-{{ employe.id }}" class="label">Nom</label>
          <input type="text" name="lastname" id="edit-lastname-{{ employe.id }}" class="input input-bordered" required value="{{ employe.lastname }}" />
        </div>
        <div class="form-control">
          <label for="edit-firstName-{{ employe.id }}" class="label">Prénom</label>
          <input type="text" name="firstName" id="edit-firstName-{{ employe.id }}" class="input input-bordered" required value="{{ employe.firstName }}" />
        </div>
        <div class="form-control">
          <label for="edit-mail-{{ employe.id }}" class="label">Email</label>
          <input type="email" name="mail" id="edit-mail-{{ employe.id }}" class="input input-bordered" required value="{{ employe.mail }}" />
        </div>
        <div class="form-control">
          <label for="edit-birthDate-{{ employe.id }}" class="label">Date de naissance</label>
          <input type="date" name="birthDate" id="edit-birthDate-{{ employe.id }}" class="input input-bordered" value="{{ employe.birthDate|date('Y-m-d') }}" />
        </div>
        <div class="form-control">
          <label for="edit-gender-{{ employe.id }}" class="label">Genre</label>
          <select name="gender" id="edit-gender-{{ employe.id }}" class="select select-bordered">
            <option value="">Sélectionner</option>
            <option value="M" {% if employe.gender == 'M' %}selected{% endif %}>Homme</option>
            <option value="F" {% if employe.gender == 'F' %}selected{% endif %}>Femme</option>
            <option value="O" {% if employe.gender == 'O' %}selected{% endif %}>Autre</option>
          </select>
        </div>
        <div class="modal-action">
          <button type="submit" class="btn btn-primary">Mettre à jour</button>
          <label for="edit-employee-modal-{{ employe.id }}" class="btn">Annuler</label>
        </div>
      </form>
    </div>
  </div>
  {% endfor %}
{% endif %}

<script>
  function switchTab(tab) {
    document.getElementById('employees-tab').classList.add('hidden');
    document.getElementById('computers-tab').classList.add('hidden');
    document.getElementById(tab + '-tab').classList.remove('hidden');
    
    // Update active tab
    const tabs = document.querySelectorAll('.tab');
    tabs.forEach(t => t.classList.remove('tab-active'));
    if (tab === 'employees') {
      tabs[0].classList.add('tab-active');
    } else {
      tabs[1].classList.add('tab-active');
    }
  }
  
  function confirmDelete(type, id) {
    if (confirm(`Êtes-vous sûr de vouloir supprimer cet élément ?`)) {
      window.location.href = `/${type}/delete/${id}`;
    }
  }
  
  function unassignComputer(id) {
    if (confirm(`Êtes-vous sûr de vouloir désassigner cet ordinateur ?`)) {
      window.location.href = `/computer/unassign/${id}`;
    }
  }
</script>
<script src="https://unpkg.com/maplibre-gl@3.6.2/dist/maplibre-gl.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialiser la carte uniquement quand l'onglet est visible pour la première fois
    let mapInitialized = false;
    
    // Fonction pour initialiser la carte
    function initMap() {
      if (mapInitialized) return;
      
      const map = new maplibregl.Map({
        container: 'map',
        style: 'https://api.maptiler.com/maps/01977dd3-84d2-7cd9-9819-d3c2eb4c5902/style.json?key=yhVb4pKbizkKPSbF1Ohr',
        center: [2.3488, 48.8534], // Paris par défaut
        zoom: 12
      });
      
      // Ajouter les contrôles de navigation
      map.addControl(new maplibregl.NavigationControl());
      
      // Ajouter des marqueurs pour chaque ordinateur
      {% if computers %}
        {% for computer in computers %}
          // Vous devrez ajouter des coordonnées à vos ordinateurs dans la base de données
          // Pour l'instant, nous utilisons des coordonnées fictives pour la démonstration
          const randomLat = 48.8534 + (Math.random() - 0.5) * 0.05;
          const randomLng = 2.3488 + (Math.random() - 0.5) * 0.05;
          
          // Créer un élément HTML personnalisé pour le marqueur
          const el = document.createElement('div');
          el.className = 'marker';
          
          // Ajouter un popup avec les informations de l'ordinateur
          const popup = new maplibregl.Popup({ offset: 25 })
            .setHTML(`
              <h3 class="font-bold">Ordinateur</h3>
              <p>MAC: {{ computer.macAddress }}</p>
              {% if computer.employe %}
                <p>Utilisé par: {{ computer.employe.firstName }} {{ computer.employe.lastname }}</p>
              {% else %}
                <p>Non assigné</p>
              {% endif %}
            `);
          
          // Ajouter le marqueur à la carte
          new maplibregl.Marker(el)
            .setLngLat([randomLng, randomLat])
            .setPopup(popup)
            .addTo(map);
        {% endfor %}
      {% endif %}
      
      mapInitialized = true;
    }
    
    // Observer quand l'onglet des ordinateurs devient visible
    const originalSwitchTab = window.switchTab;
    window.switchTab = function(tab) {
      originalSwitchTab(tab);
      if (tab === 'computers') {
        // Initialiser la carte quand on passe à l'onglet des ordinateurs
        setTimeout(initMap, 100); // Petit délai pour s'assurer que l'élément est visible
      }
    };
  });
</script>
{% endblock %}